// Utiliza o JS DOM para armazenar todos os elementos que ser√£o din√¢micos nesta
// aplica√ß√£o
const minutesLabel = document.getElementById('minutes');
const secondsLabel = document.getElementById('seconds');
const quoteLabel = document.getElementById('quote');
const startButton = document.querySelector('.button.start-countdown');
const pauseButton = document.querySelector('.button.pause-countdown');
const stopButton = document.querySelector('.button.stop-countdown');
const greetingsDiv = document.getElementById('greetings');
const focusDiv = document.getElementById('focus');
const restDiv = document.getElementById('rest');
const usernameSpan = document.querySelectorAll('.username');
const actionsDiv = document.querySelector('.actions');

// Inicializa objetos e vari√°veis de configura√ß√µes do pomodoro
const timerSettings = {};
let timerInterval;
let quoteInterval;

// Busca o nome do usu√°rio no banco de dados
let userName;

// Atribui o nome do usu√°rio (oriundo do banco de dados) para cada elemento onde
// o nome dele deve aparecer em tela
window.api.getUsers().then(data => { 
  userName = data[0].name;  
  usernameSpan.forEach((span) => {
    span.innerText = userName;
  })
}).catch(error => console.error(error));

// Fun√ß√£o para acessar o banco de dados e listar todos os usu√°rios cadastrados
async function getUsersSettings() {
  const users = await window.api.getUsers();
  return users[0];
}

// Inicializa as configura√ß√µes para o timer iniciar de forma adequada
async function timerSetup() {
  // Captura quanto tempo o usu√°rio definiu de foco e descanso
  const { focus_time, rest_time } = await getUsersSettings();

  // Inicializa o objeto timerSettings com propriedades fundamentais para execu√ß√£o
  // do pomodoro
  timerSettings.isPaused    =  false;            // N√£o est√° pausado
  timerSettings.isRestTime  =  false;            // Est√° em tempo de foco
  timerSettings.focusTime   =  focus_time * 60;  // Atribui o tempo de foco em minutos
  timerSettings.restTime    =  rest_time * 60;   // Atribui o tempo de descanso em minutos

  // Esconde os bot√µes de pausar e parar o pomodo e deixa apenas vis√≠vel
  // o bot√£o de iniciar. Por fim, esconde as cita√ß√µes.
  startButton.style.display = 'inline';
  pauseButton.style.display = 'none';
  stopButton.style.display = 'none';
  quoteLabel.style.display = 'none';
  greetingsDiv.style.display = 'block';
  focusDiv.style.display = 'none';
  restDiv.style.display = 'none';

  // Caso a aplica√ß√£o n√£o esteja armazenando o tempo de foco, tempo de descanso
  // e quantidade total de ciclos do pomodoro, ele inicializa este armazenamento
  // inicialmente com o valor 0.
  if (!localStorage.getItem("focus_time_total"))
    localStorage.setItem("focus_time_total", 0);
  if (!localStorage.getItem("rest_time_total"))
    localStorage.setItem("rest_time_total", 0);
  if (!localStorage.getItem("cycles_total"))
    localStorage.setItem("cycles_total", 0);

  // Atualiza o display com os minutos atuais do pomodoro de acordo com o que o
  // usu√°rio definiu no banco de dados
  updateDisplay(timerSettings.focusTime);
}

// Inicializa a configura√ß√£o inicial do timer.
timerSetup();

// Fun√ß√£o para iniciar o pomdoro
function startPomodoro() {
  // Faz um registro no banco de dados que um pomodoro acabou de ser iniciado
  window.api.startPomodoro(1).then(() => {
    // Impedir que o usu√°rio acesse painel de configura√ß√µes e m√©tricas enquanto um
    // pomodoro estiver em execu√ß√£o
    actionsDiv.style.display = 'none';

    // Inicia o timer
    startTimer();
  }).catch((error) => console.log(error));  
}

// Fun√ß√£o para finalizar o pomodoro
async function endPomodoro() {
  // Captura o tempo total de foco, descanso e a quantidade total de ciclos
  // de pomodoro e converte para n√∫mero.
  const totalFocusTime = Number(localStorage.getItem("focus_time_total"));
  const totalRestTime = Number(localStorage.getItem("rest_time_total"));
  const totalCycles = Number(localStorage.getItem("cycles_total"));

  // Atualiza o pomodoro que estava em andamento para finalizado e salva as
  // estat√≠sticas citadas no coment√°rio acima neste pomodoro finalizado.
  await window.api.endPomodoro(totalFocusTime, totalRestTime, totalCycles);

  // Redefine as m√©tricas para 0 com intuito de n√£o impactar outros pomodoros futuros.
  localStorage.setItem("focus_time_total", 0)
  localStorage.setItem("rest_time_total", 0)
  localStorage.setItem("cycles_total", 0)

  // Retornar acesso ao painel de configura√ß√µes e m√©tricas
  actionsDiv.style.display = 'block';
  
  // Para o timer.
  stopTimer();
}

// Inicia o rel√≥gio (timer)
function startTimer() {
  // Mostra uma notifica√ß√£o no computador
  dispatchNotification(`${userName}, esteja focado üß†`, `O seu tempo de foco acaba de come√ßar!`);
  // Mostra a frase de foco e esconde a frase de in√≠cio de pomodoro
  greetingsDiv.style.display = 'none';
  focusDiv.style.display = 'block';

  // Esconde o bot√£o de iniciar e deixa apenas dispon√≠vel os bot√µes de parar e pausar
  startButton.style.display = 'none';
  pauseButton.style.display = 'inline';
  stopButton.style.display = 'inline';

  // Armazena os segundos restantes para o t√©rmino do tempo de foco em uma vari√°vel
  let secondsRemaining = timerSettings.focusTime;
  // Define qual tipo de m√©trica vai alterar (tempo total de descanso ou tempo total de foco)
  let localStorageTimer = "focus_time_total";
  
  // Atualiza o display com os segundos restantes do tempo de foco
  updateDisplay(secondsRemaining);
  // Dispara fun√ß√£o para mostrar frases aleat√≥rias de motiva√ß√£o para o usu√°rio
  showRandomQuote();

  // Inicializa uma fun√ß√£o de intervalo que rodar√° de um em um segundo.
  timerInterval = setInterval(() => {
    // Apenas executa o timer se ele n√£o estiver pausado
    if (!timerSettings.isPaused) {
      // Subtrai um segundo do tempo restante do timer
      secondsRemaining -= 1;
  
      // Atualiza no display que o tempo acaba de ser subtra√≠do por um
      updateDisplay(secondsRemaining);

      // Armazena na m√©trica que um segundo j√° se passou
      localStorage.setItem(
        localStorageTimer,
        Number(localStorage.getItem(localStorageTimer)) + 1
      );

      // Se a contagem de segundos restantes chegou a zero e ele j√° passou pelo tempo
      // de descanso, ent√£o reinicia um ciclo (inicia novamente o tempo de foco)
      if (secondsRemaining === 0 && timerSettings.isRestTime) {
        restartTimer();
      }
      // Se a contagem de segundos chegou a zero e ele ainda n√£o entrou no tempo de descanso,
      // ent√£o ele inicia a contagem dos segundos de descanso
      else if (secondsRemaining === 0 && !timerSettings.isRestTime) {
        // Mostra uma notifica√ß√£o no computador
        dispatchNotification(`${userName}, que tal descansar agora? ü§©`, `O seu tempo de foco acabou, aproveite o tempo de descanso para retornar com as energias renovadas.`);
        timerSettings.isRestTime = true;                   // Altera o estado para tempo de descanso
        localStorageTimer        = "rest_time_total";      // Atualiza as m√©tricas de descanso (ao inv√©s de foco)
        secondsRemaining         = timerSettings.restTime; // Atualiza os segundos restantes de 0 para a quantidade tempo de descanso
        restDiv.style.display    = 'block';                // Mostra o texto de descanso informando que o usu√°rio pode descansar
        focusDiv.style.display   = 'none';                 // Remove o texto de foco
      }
    }
  }, 1000);

  // Atualiza a cita√ß√£o motivacional de 5 em 5 segundos
  quoteInterval = setInterval(() => {
    if (!timerSettings.isPaused) {
      showRandomQuote();
    }
  }, 5000);
}

// Pausa o rel√≥gio (timer)
function pauseTimer() {
  // Pausa (ou despausa) o timer
  timerSettings.isPaused = !timerSettings.isPaused;

  // Se ele j√° estiver pausado, altera o texto do bot√£o para 'Retomar Ciclo'
  if (timerSettings.isPaused) pauseButton.innerText = 'Retomar Ciclo';
  // Caso contr√°rio, o texto do bot√£o √© definido para 'Pausar Ciclo'
  else pauseButton.innerText = 'Pausar Ciclo';
}

// Reinicia o ciclo do rel√≥gio (timer)
function restartTimer() {
  // Conta um ciclo de pomodoro realizado
  localStorage.setItem(
    "cycles_total",
    Number(localStorage.getItem("cycles_total")) + 1
  );
  
  // Limpa os intervalos do timer e das cita√ß√µes
  clearTimeout(timerInterval);
  clearTimeout(quoteInterval);

  // Reconfigura o timer
  timerSetup();
  // Inicia o timer
  startTimer();
}

// Para o rel√≥gio (timer)
function stopTimer() {
  clearTimeout(timerInterval);
  clearTimeout(quoteInterval);
  timerSetup();
}

// Fun√ß√£o para atualizar os valores no display
function updateDisplay(secondsRemaining) {
  const seconds = secondsRemaining % 60;
  const minutes = Math.floor(secondsRemaining / 60);

  minutesLabel.innerText = String(minutes).padStart(2, '0');
  secondsLabel.innerText = String(seconds).padStart(2, '0');
}

// Fun√ß√£o para mostrar as cita√ß√µes
function showRandomQuote() {
  // Mostra o elemento de cita√ß√£o
  quoteLabel.style.display = 'inline';

  // Array com as cita√ß√µes motivacionais
  const quotes = [
    "Todos os dias s√£o uma oportunidade para recome√ßar e para planejar um novo caminho. Siga com f√© e acredite em voc√™.",
    "A palavra ‚Äúimposs√≠vel‚Äù foi inventada para ser desafiada.",
    "Somos capazes de fazer muito mais do que imaginamos!",
    "N√≥s somos como o clima: feitos de dias de chuva e de sol!",
    "H√° ainda tanta coisa linda na vida para se descobrir.",
    "Que todos os nossos passos nos levem para o que nos faz feliz de verdade.",
    "Abra os olhos e aventure-se nessa jornada chamada vida!",
    "H√° tantas pessoas que torcem por voc√™ na vida.",
    "Os dias dif√≠ceis s√£o a forma mais r√°pida de aprendermos a apreciar os bons.",
    "Siga sempre confiante do seu potencial!",
    "Hoje √© um novo dia. N√£o fique pensando no ontem.",
    "Os sonhos s√£o a melhor forma de termos uma dire√ß√£o na vida e um motivo para caminhar.",
    "Receita para uma boa semana: acredite em voc√™ e trate o seu corpo com carinho.",
    "Quando tudo parecer imposs√≠vel, √© sinal de que est√° precisando de uns bons dias de descanso para aliviar a press√£o e liberar a sua mente. Depois, ver√° que os problemas nem eram t√£o grandes assim.",
    "N√£o se torture quando as coisas n√£o ocorrerem como voc√™ planejou. Os planos nos ajudam a tra√ßar o caminho, mas √© normal que tenhamos que mud√°-los depois!",
    "N√£o h√° a necessidade de caminhar r√°pido. Apenas siga caminhando.",
    "Se aquela meta antiga j√° n√£o te faz mais feliz, elimine-a sem d√≥!",
    "N√£o precisamos conquistar o mundo todos os dias!",
    "Dias complicados fazem parte. O bom √© que passam e depois aparecem dias bons.",
    "A vida √© como uma montanha: tem altos e baixos, exige caminhada e tem paisagens para se observar durante todo o caminho.",
    "Respeite seu corpo e trate com carinho a sua mente.",
    "Em meio ao caos, respire fundo.",
    "Os nossos sonhos s√£o umas das melhores coisas que moram dentro de n√≥s.",
    "Voc√™ √© forte, voc√™ consegue.",
    "Se hoje fosse a primeira p√°gina do seu livro da vida, como voc√™ gostaria de come√ßar com ela?",
    "N√£o existem batalhas imposs√≠veis para quem est√° disposto a nunca desistir.",
    "Algumas coisas ruins acontecem para aprendermos a ficar mais fortes.",
    "Nunca √© tarde para fazer o que ainda movimenta os seus sonhos.",
    "Os nossos maiores medos tamb√©m podem ser nossos maiores impulsos para novas conquistas.",
    "N√£o desista de algo quando falarem que voc√™ n√£o √© capaz. Levante-se e mostre que est√£o enganados.",
    "Mudar √© bom! Aprenda a se redescobrir.",
    "H√° tanta coisa incr√≠vel para descobrir sobre voc√™. Desafie-se e permita-se conhecer diferentes lados de voc√™.",
    "Algumas caminhadas precisam ser iniciadas sem ningu√©m ao lado. Ao longo do caminho, algumas pessoas v√£o se juntar a voc√™. Fique tranquilo.",
    "Seja um borboleta e passe por uma bela metamorfose!",
    "A primavera vir√° dentro de voc√™. Aguente firme.",
    "Voc√™ j√° fez uma caminhada t√£o bonita at√© agora. Parabenize-se.",
    "Hoje a meta do dia √© ter gratid√£o pela vida e se parabenizar por tudo o que voc√™ j√° fez.",
    "Um dia voc√™ estar√° olhando para tr√°s e pensando em todas as conquistas que j√° fez.",
    "N√£o coloque metas muito pesadas no seu caminho. Ningu√©m merece sofrer com um peso desnecess√°rio nas costas!",
    "Fa√ßa as pazes com a vida e ande de m√£os dadas com ela.",
    "Ter sucesso √© estar em paz com as nossas escolhas.",
    "O cora√ß√£o tem um espa√ßo limitado. Ent√£o, vamos deixar s√≥ o amor entrar e jogar fora o rancor.",
    "Algumas pessoas ficam pelo caminho, mas outras maravilhosas tamb√©m entram ao longo do trajeto.",
    "A vida √© como um trem: pessoas entram e saem, paisagens novas aparecem, esta√ß√µes oferecem pausas.",
    "N√£o tenha medo de desistir do que j√° n√£o te faz bem.",
    "√Äs vezes, precisamos de um pouco mais de coragem e de amor pr√≥prio.",
    "N√£o aceite nada que imponha limites ao que faz parte da sua ess√™ncia.",
    "Valorize seus amigos e enfrente batalhas com eles! Eles s√£o o time que voc√™ escolheu para jogar na vida.",
    "Se sentir medo, √© sinal de que est√° bem pr√≥ximo do desafio. Enfrente-o e descubra do que voc√™ √© capaz.",
    "J√° sentiu o cheiro das flores hoje? J√° escutou o canto dos passarinhos? A vida preparou isto tudo para voc√™ tamb√©m. Aproveite!",
    "Cada esquina da vida nos reserva uma surpresa. Descubra o que a pr√≥xima esquina reservou para voc√™!",
    "Algumas coisas d√£o errado porque a vida planejou algo melhor.",
    "A vida sabe o que faz. D√™ mais cr√©dito a ela.",
    "Li√ß√µes da vida: escute-as.",
    "H√° uma vida inteira diante de voc√™. Vamos fazer uma linda hist√≥ria com ela?",
    "A motiva√ß√£o √© o tipo de coisa que precisa ser refor√ßada todos os dias. Como? Alimentando a sua alma de boas energias e deixando o seu cora√ß√£o nutrido de carinho.",
    "Ningu√©m conquista o mundo sem uma boa noite de sono! Tire os problemas do seu travesseiro.",
    "Quantas coisas boas j√° aconteceram depois que tudo fugiu do controle? Os planos da vida s√£o t√£o bons.",
    "A f√© e a esperan√ßa s√£o os melhores combust√≠veis do motor do corpo.",
    "Quando cansar, descanse, recupere energias e siga!",
    "Aquela for√ßa que voc√™ busca est√° dentro de voc√™.",
    "Seja a pessoa que mais acredita em voc√™!",
    "Nem todas as batalhas s√£o feitas de vit√≥ria, mas todas elas s√£o feitas de esfor√ßos, de aprendizagens e de recompensas."
  ];

  // Seleciona um √≠ndice aleat√≥rio deste array e retorna o seu valor (cita√ß√£o)
  const randomQuote = quotes[(Math.random() * quotes.length) | 0]
  // Atualiza em tela para visualiza√ß√£o do usu√°rio
  quoteLabel.innerText = randomQuote;
}

// Fun√ß√£o para mostrar uma notifica√ß√£o no computador
function dispatchNotification(title, message) {
  new window.Notification(title, { body: message });
}